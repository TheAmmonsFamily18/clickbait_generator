# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/myapp
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          DATABASE_URL: "postgres://myapp@localhost/myapp-test"
          RAILS_ENV: ci

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: myapp
          POSTGRES_DB: myapp-test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout
      - restore_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}

      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run: bundle exec rake db:create db:schema:load
      - run: bundle exec rake db:migrate

      # Run rspec in parallel
      - type: shell
        environment:
          RAILS_ENV: ci
        command: |
          bundle exec rspec --profile 5 --out test_results/rspec.xml \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
